``add_integer`` function
========================
how to use ``0-add_integer.py``
========================
using ``add_integer``
---------------------

importing the module :
  >>> add_integer = __import__("0-add_integer").add_integer

Checking if the module is imported:
  >>> check = __import__("0-add_integer").__doc__
  >>> len(check) > 1
  True

test normal ints :
  >>> add_integer(5,5)
  10

test float and int:
  >>> add_integer(5.5,5)
  10

test int and float:
  >>> add_integer(5,5.5)
  10

test string and int:
  >>> add_integer("hello",5)
  Traceback (most recent call last):
  ...
  TypeError: a must be an integer

test int and string:
  >>> add_integer(5,"hello")
  Traceback (most recent call last):
  ...
  TypeError: b must be an integer

test one float:
  >>> add_integer(5000.5)
  5098

test long int:
  >>> add_integer(9999999999999,999999999)
  10000999999998

test negative :
  >>> add_integer(-10,5)
  -5

test negative:
  >>> add_integer(10,-5)
  5

test two negative:
  >>> add_integer(-10,-5)
  -15

test string and string:
  >>> add_integer("hello","howareyou")
  Traceback (most recent call last):
  ...
  TypeError: a must be an integer

test none:
  >>> add_integer(None)
  Traceback (most recent call last):
  ...
  TypeError: a must be an integer

test the NaN:
  >>> add_integer(float('NaN'))
  Traceback (most recent call last):
  ...
  ValueError: cannot convert float NaN to integer

